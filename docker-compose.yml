version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:13
    container_name: taskmanager_postgres
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: taskmanager_user
      POSTGRES_PASSWORD: taskmanager_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - taskmanager_network
    restart: unless-stopped

  # Redis для кеширования и сессий
  redis:
    image: redis:6-alpine
    container_name: taskmanager_redis
    ports:
      - "6379:6379"
    networks:
      - taskmanager_network
    restart: unless-stopped

  # Основное приложение
  app:
    build: .
    container_name: taskmanager_app
    environment:
      - DATABASE_URL=postgresql://taskmanager_user:taskmanager_password@postgres:5432/taskmanager
      - REDIS_URL=redis://redis:6379
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - GOOGLE_FORMS_SECRET_TOKEN=${GOOGLE_FORMS_SECRET_TOKEN}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - taskmanager_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    container_name: taskmanager_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - taskmanager_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  taskmanager_network:
    driver: bridge
